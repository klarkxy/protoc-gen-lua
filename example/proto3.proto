syntax = "proto3";

import "google/protobuf/any.proto";

package example.proto3;

/* SearchRequest represents a search query, with pagination options to
 * indicate which results to include in the response. */
message SearchRequest {
  string query = 1;
  int32 page_number = 2;     // Which page number do we want?
  int32 result_per_page = 3; // Number of results to return per page.
  enum Corpus {
    UNIVERSAL = 0;
    WEB = 1;
    IMAGES = 2;
    LOCAL = 3;
    NEWS = 4;
    PRODUCTS = 5;
    VIDEO = 6;
  }
  Corpus corpus = 4;
}

message MyMessage1 {
  enum EnumAllowingAlias {
    option allow_alias = true;
    UNKNOWN = 0;
    STARTED = 1;
    RUNNING = 1;
  }
}
message MyMessage2 {
  enum EnumNotAllowingAlias {
    UNKNOWN = 0;
    STARTED = 1;
    // RUNNING = 1;  // Uncommenting this line will cause a compile error inside
    // Google and a warning message outside.
  }
}
enum Foo {
  unknown = 0;
  reserved 2, 15, 9 to 11, 40 to max;
  reserved "FOO", "BAR";
}

message SearchResponse {
  message Result {
    string url = 1;
    string title = 2;
    repeated string snippets = 3;
  }
  repeated Result results = 1;
  message Foo {
    reserved 2, 15, 9 to 11;
    reserved "foo", "bar";
  }
  map<string, SampleMessage> projects = 3;
}

message Outer {      // Level 0
  message MiddleAA { // Level 1
    message Inner {  // Level 2
      int64 ival = 1;
      bool booly = 2;
    }
  }
  message MiddleBB { // Level 1
    message Inner {  // Level 2
      int32 ival = 1;
      bool booly = 2;
    }
  }
}

message ErrorStatus {
  string message = 1;
  repeated google.protobuf.Any details = 2;
}
message SampleMessage {
  oneof test_oneof {
    string name = 4;
    int32 number = 9;
  }
}
service SearchService { rpc Search(SearchRequest) returns (SearchResponse); }